<div class="error-event">
  <%= render partial: "external_errors/events/timestamp", locals: { event: event } %>

  <h3>Network Response</h3>
  <p>
    As a response of the previous call, the server responded with status
    <code><%= event[:status] %></code> and the following response headers:
  </p>

  <%
    # header names come in all formats and flavours, and the +normalized_headers+
    # variable aims to represent all different combinations of headers names to
    # a standardised convention - namely, capitalized names. Therefore, the following
    # transformations occur:
    #
    #   "content-type" => "Content-Type"
    #   "CONTENt-TyPe" => "Content-Type"
    (normalized_headers = {}).tap do |headers|
      event[:headers].to_h.each do |key, value|
        headers[key.split("-").map(&:capitalize).join("-")] = value
      end
    end
  %>

  <div class="code-block">
    <% normalized_headers.each do |header, value| %>
      <p><strong><%= header %>:</strong> <%= value.strip %></p>
    <% end %>
  </div>

  <% if event[:body] %>
    <p>Response body:</p>

    <%
      content_type = normalized_headers["Content-Type"]
      css_class    = syntax_highlight_class(content_type)
    %>

    <%# breaks the indentiation here so that the code will be displayed properly,
        since the +pre+ tag does not ignore the white spaces %>
    <pre class="<%= css_class %> code-block">
<%= pretty_print(event[:body], content_type) %>
    </pre>
  <% end %>
</div>
